import datetime

import telebot
from config import TOKEN
from datetime import date
import time
from telebot import types
import requests

from data import db_session
from data.users import User


bot = telebot.TeleBot(TOKEN)

db_session.global_init('db/record.sqlite')
session = db_session.create_session()


@bot.message_handler(commands=['start'])
def startcommand(message):
    time.sleep(0.3)
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã')
    btn2 = types.KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã')
    btn3 = types.KeyboardButton('–ö—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å?')
    markup.add(btn1, btn2)
    markup.row(btn3)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}üëã!')
    time.sleep(0.3)
    bot.send_message(message.chat.id, text="–≠—Ç–æ –±–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤.", reply_markup=markup)
    bot.send_message(message.chat.id, '–í—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/help" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π')


@bot.message_handler(commands=['help'])
def help_command(message):
    time.sleep(0.3)
    text = f'–ó–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã \n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å—Ö–æ–¥—ã\n–†–∞—Å—Ö–æ–¥—ã –ø–æ –¥–∞—Ç–∞–º\n–û–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å\n–ö—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å?'
    bot.send_message(message.chat.id, text)


@bot.message_handler()
def on_click(message):
    if message.text.lower() == '–∑–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å –≤ –≤–∏–¥–µ [–ö–ê–¢–ï–ì–û–†–ò–Ø-–¶–ï–ù–ê]:')
        bot.register_next_step_handler(message, repeat_all_messages)
    elif message.text.lower() == '–ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã':
        for user in session.query(User).all():
            text_message = f'{user.today} \n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.user_name} \n–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {user.category} \n—Å—É–º–º–∞: {user.price}\n'
            bot.send_message(message.chat.id, text_message)
    elif message.text.lower() == '–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å?':
        bot.register_next_step_handler(message, organization)
    elif message.text.lower() == '—Ä–∞—Å—Ö–æ–¥—ã –ø–æ –¥–∞—Ç–∞–º':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥-–º–º-–≥–≥')
        bot.register_next_step_handler(message, expenses_by_dates)
    elif message.text.lower() == '–æ–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥-–º–º-–≥–≥')
        bot.register_next_step_handler(message, amount_of_expenses)
    if '–ø—Ä–∏–≤' in message.text.lower():
        time.sleep(0.3)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!‚ò∫')


def repeat_all_messages(message):
    try:
        today = datetime.date.today()

        #  —Ä–∞–∑–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 2 —á–∞—Å—Ç–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Ü–µ–Ω–∞
        category, price = message.text.split("-", 1)
        text_message = f'–ù–∞ {today} –≤ —Ç–∞–±–ª–∏—Ü—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: –∫–∞—Ç–µ–≥–æ—Ä–∏—è {category}, —Å—É–º–º–∞ {price} —Å—É–º'
        bot.send_message(message.chat.id, text_message)

        # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
        user = User()
        user.user_name = message.from_user.first_name
        user.category = category
        user.price = price
        user.today = today
        session.add(user)
        session.commit()
    except:
        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –æ–ø–æ–≤–µ—â–∞–µ–º –µ–≥–æ –∏ –ø—Ä–æ—Å–∏–º –≤–≤–æ–¥–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
        bot.send_message(message.chat.id, '–û–®–ò–ë–ö–ê! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!')
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')


def organization(message):
    text_message = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –≥–æ—Ä–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ["–ö–ê–¢–ï–ì–û–†–ò–Ø", "–ì–û–†–û–î"]:'
    bot.send_message(message.chat.id, text_message)
    bot.register_next_step_handler(message, poisk)


def expenses_by_dates(message):
    expenses = []
    for user in session.query(User).all():
        if user.today == message.text:
            expenses.append(f'{user.today} \n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.user_name} \n–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {user.category} \n—Å—É–º–º–∞: {user.price}\n')
    if expenses:
        for i in expenses:
            bot.send_message(message.chat.id, i)
    else:
        bot.send_message(message.chat.id, '–ù–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤')


def amount_of_expenses(message):
    total_amount = []
    for user in session.query(User).all():
        if user.today == message.text:
            total_amount.append(user.price)
    if total_amount:
        bot.send_message(message.chat.id, str(sum(list(map(int, total_amount)))))
        print(sum(list(map(int, total_amount))))
    else:
        bot.send_message(message.chat.id, '–ù–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤')


def poisk(message):
    apikey = "9ec7254a-4fc4-49cf-b617-89cd8e5f5860"
    sp = message.text.split(', ')
    try:
        request = f'https://search-maps.yandex.ru/v1/?text={sp[0]},{sp[1]}&type=biz&lang=ru_RU&apikey={apikey}'
        responce = requests.get(request)
        if responce:
            try:
                for i in range(1, 10):
                    json = responce.json()['features'][i]['properties']['CompanyMetaData']['Categories'][0]['name']
                    json1 = responce.json()['features'][i]['properties']['CompanyMetaData']['Hours']['text']
                    json2 = responce.json()['features'][i]['properties']['CompanyMetaData']['name']
                    json3 = responce.json()['features'][i]['properties']['CompanyMetaData']['address']
                    json4 = responce.json()['features'][i]['properties']['CompanyMetaData']['Phones'][0]['formatted']
                    text_message = f'{json}, {json2} \n{json3} \n{json1} \n{json4}\n'
                    bot.send_message(message.chat.id, text_message)
            except:
                pass

    except:
        bot.send_message(message.chat.id, '–û–®–ò–ë–ö–ê! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!')
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    # https://search-maps.yandex.ru/v1/?text=–∫–∞—Ñ–µ,–ü—Å–∫–æ–≤&type=biz&lang=ru_RU&apikey=9ec7254a-4fc4-49cf-b617-89cd8e5f5860


# START
bot.polling(none_stop=True)
